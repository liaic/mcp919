###############################################################################
# Sample configuration for OptiFine's Random Mobs feature.
# Based on the configuration for MCPatcher's Random Mobs mod.
#
###############################################################################
# mob.properties
###############################################################################
# Sample mob.properties file for use with MCPatcher's Random Mobs mod.
#
# This file is offered without any copyright restrictions. Please copy and
# modify it to suit your needs.  Then place it in the mcpatcher/mob folder of
# your texture pack, parallel to the vanilla texture in textures/entity:
#
# Primary (vanilla) texture:
#   assets/minecraft/textures/entity/creeper/creeper.png
# Alts:
#   assets/minecraft/mcpatcher/mob/creeper/creeper2.png
#   assets/minecraft/mcpatcher/mob/creeper/creeper3.png
#   assets/minecraft/mcpatcher/mob/creeper/creeper4.png
#   etc.
# Properties (optional):
#   assets/minecraft/mcpatcher/mob/creeper/creeper.properties
#
# Primary (vanilla) texture:
#   assets/minecraft/textures/entity/chicken.png
# Alts:
#   assets/minecraft/mcpatcher/mob/chicken2.png
#   assets/minecraft/mcpatcher/mob/chicken3.png
#   assets/minecraft/mcpatcher/mob/chicken4.png
#   etc.
# Properties (optional):
#   assets/minecraft/mcpatcher/mob/chicken.properties
#
# This file consists of a sequence of rules, numbered from 1.  Each rule
# specifies a range of mob skins to use and one or more conditions under which
# to use them.  The mob's x,y,z coordinates when it spawns (single player)
# or when it is first seen by the client (multiplayer) are checked against
# each rule in sequence.  The first rule that matches wins.  If no rule
# matches, the default texture (e.g., creeper.png) is used.
#
# If no .properties file is present for a mob, then all available textures are
# used for that type of mob.  This is the original Random Mobs behavior.
#
# Mobs with multiple textures will use the .properties file for the base
# texture.  In other words, you do not need to create
# wolf.properties
# wolf_tame.properties
# wolf_angry.properties
# Just wolf.properties will work for all three, provided you have the same
# number of textures for each.  Similarly for *_eyes and *_overlay.
#
# All property names are case-sensitive.
# All paths are relative to assets/minecraft unless otherwise stated.
###############################################################################

###############################################################################
# Rule format.
# <n> starts at 1.
###############################################################################

# (Required) Range of mob skins to use.
skins.<n>=<list of mob skins to use>

# (Optional) List of weights to apply to the random choice
# Weights do not have to total 100 or any other particular value.
weights.<n>=<same-size list of weights>

# (Optional) List of biomes
# The biome names are case-insensitive.
# For reference, the vanilla biome names are:
#   Ocean Plains Desert ExtremeHills Forest Taiga Swampland River Hell Sky
#   FrozenOcean FrozenRiver IcePlains IceMountains MushroomIsland
#   MushroomIslandShore Beach DesertHills ForestHills TaigaHills
#   ExtremeHillsEdge Jungle JungleHills
# Biomes added by other mods can also be used (remove the spaces from the biome name).
biomes.<n>=<biome list>

# (Optional) Height ranges
# Replaces legacy minHeight and maxHeight properties.
heights.<n>=<height ranges>

# (Optional) Mob name
# Uses syntax similar to the Custom Item Textures NBT tags. 
# A value starting with "!" performs a negative match (not).
# Examples:
#  - Match string: "name=Pinky"
#  - Match special formatting: "name=\u00a74\u00a7oPinky"  
#    (for best compatibility, use the escape sequence '\u00a7' instead of "§")
#  - Wildcards using "?" and "*": "name=pattern:Pinky*"
#  - Wildcards, case insensitive: "name=ipattern:Pinky*"
#  - Java regular expressions: "name=regex:Pin(k)+y"
#    (see http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html)
#  - Java regular expressions, case insensitive: "name=iregex:Pin(k)+y"
# Any backslashes in the match string must be doubled.  
# Literal backslashes within a regular expression or wildcard must be quadrupled.
# Correct:
#   name=regex:\\d+
#   name=regex:\\\\
#   name=/\\/\\
# Wrong:
#   name=regex:\d+
#   name=regex:\\
#   name=/\/\
name.<n>=<name>

# Professions (optional)
# List of villager professions with optional careers
#
# Entry format
#   <profession>[:carrer1,career2,...]
#
# Profession     Careers
# ============== ===================================== 
# farmer         farmer, fisherman, shepherd, fletcher
# librarian      librarian, cartographer
# priest         cleric
# blacksmith     armor, weapon, tool
# butcher        butcher, leather
# nitwit         nitwit
#
# Example:
#   # Professions farmer (all careers) or blacksmith (all careers)
#   professions.2=farmer blacksmith
#   # Careers fisherman, shepherd or nitwit
#   professions.3=farmer:fisherman,shepherd nitwit:nitwit
#
# Professions and careers can also be given by their numeric ID values.
# See https://minecraft.gamepedia.com/Villager#Professions_and_careers
professions.<n>=<professions>

###############################################################################
# Examples:
# mob/creeper.properties:
###############################################################################
# Use creeper10.png through creeper14.png for all underground creepers.
# creeper13.png will be used 7.3% (3/(10+10+10+3+10)) of the time.
skins.1=10-14
weights.1=10 10 10 3 10
heights.1=0-55

# Use 5, 7, 9 in high, hilly areas.
skins.2=5 7 9
biomes.2=ExtremeHills DesertHills ForestHills ExtremeHillsEdge JungleHills IceMountains
heights.2=80-255

# Fallback rule if nothing else matches.  Remember, if no rule matches, only
# the base mob/creeper.png will be used.
skins.3=1-4 6 8 15-20
